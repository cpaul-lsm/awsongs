{"version":3,"file":"_server.ts-BDrXagnw.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/add-request/_server.ts.js"],"sourcesContent":["import { promises } from \"fs\";\nimport path from \"path\";\nconst requestsFilePath = path.resolve(\"src/lib/database/requests.json\");\nasync function getRequests() {\n  const data = await promises.readFile(requestsFilePath, \"utf-8\");\n  return JSON.parse(data);\n}\nasync function addRequest(request) {\n  try {\n    const requests = await getRequests();\n    requests.push(request);\n    await promises.writeFile(requestsFilePath, JSON.stringify(requests, null, 2));\n    console.log(\"Request added:\", request);\n    console.log(\"Current requests:\", requests);\n  } catch (error) {\n    console.error(\"Error adding request:\", error);\n    throw error;\n  }\n}\nasync function POST({ request }) {\n  try {\n    const newRequest = await request.json();\n    console.log(\"Received request:\", newRequest);\n    await addRequest(newRequest);\n    return new Response(JSON.stringify({ message: \"Request added successfully\" }), {\n      status: 200,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  } catch (error) {\n    if (error instanceof SyntaxError) {\n      return new Response(JSON.stringify({ error: \"Invalid JSON\" }), {\n        status: 400,\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n    }\n    console.error(\"Error processing request:\", error);\n    return new Response(JSON.stringify({ error: \"Failed to add request\" }), {\n      status: 500,\n      headers: { \"Content-Type\": \"application/json\" }\n    });\n  }\n}\nasync function GET() {\n  return new Response(JSON.stringify({ error: \"Method Not Allowed\" }), {\n    status: 405,\n    headers: { \"Content-Type\": \"application/json\" }\n  });\n}\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":";;;AAEA,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC;AACvE,eAAe,WAAW,GAAG;AAC7B,EAAE,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,EAAE,OAAO,CAAC;AACjE,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACzB;AACA,eAAe,UAAU,CAAC,OAAO,EAAE;AACnC,EAAE,IAAI;AACN,IAAI,MAAM,QAAQ,GAAG,MAAM,WAAW,EAAE;AACxC,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AAC1B,IAAI,MAAM,QAAQ,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACjF,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC;AAC1C,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC;AAC9C,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC;AACjD,IAAI,MAAM,KAAK;AACf;AACA;AACA,eAAe,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE;AACjC,EAAE,IAAI;AACN,IAAI,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE;AAC3C,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAU,CAAC;AAChD,IAAI,MAAM,UAAU,CAAC,UAAU,CAAC;AAChC,IAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,EAAE;AACnF,MAAM,MAAM,EAAE,GAAG;AACjB,MAAM,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB;AACnD,KAAK,CAAC;AACN,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,IAAI,KAAK,YAAY,WAAW,EAAE;AACtC,MAAM,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,EAAE;AACrE,QAAQ,MAAM,EAAE,GAAG;AACnB,QAAQ,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB;AACrD,OAAO,CAAC;AACR;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC;AACrD,IAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC,EAAE;AAC5E,MAAM,MAAM,EAAE,GAAG;AACjB,MAAM,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB;AACnD,KAAK,CAAC;AACN;AACA;AACA,eAAe,GAAG,GAAG;AACrB,EAAE,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC,EAAE;AACvE,IAAI,MAAM,EAAE,GAAG;AACf,IAAI,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB;AACjD,GAAG,CAAC;AACJ;;;;"}